name: Deploy custom application to AWS on customer sign-up

on:
  workflow_dispatch
  # push:
  #   branches:
  #   - main

env:
  EKS_CLUSTER: dev
  EKS_REGION: us-east-2

jobs:
  setup-build-publish-deploy:
    name: Deploy application to AWS
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # AWS Credentials
    - uses: aws-actions/configure-aws-credentials@v1
      with:
       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       aws-region: ${{ env.EKS_REGION }}

   # Get the EKS credentials so we can deploy to the cluster
    - run: |-
       aws eks --region $EKS_REGION update-kubeconfig --name $EKS_CLUSTER
         
   # Login to Jfrog
    - name: Jfrog login
      env:
       JFROG_USER: ${{ secrets.JFROG_USER }}
       JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
      run: |
       docker login sreyo.jfrog.io -u $JFROG_USER -p $JFROG_PASSWORD
       kubectl delete secret jfrog-secret --ignore-not-found 
       kubectl create secret generic jfrog-secret --from-file=.dockerconfigjson=/home/runner/.docker/config.json  --type=kubernetes.io/dockerconfigjson   
         
     # Deploy gateway and virtual services
    - name: Deploy gateway
      run: |-
       kubectl apply -f gateway.yaml
       kubectl get svc -l=istio=ingressgateway -n istio-system         
             
    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
   
   # Deploy application 
    - name: Deploy application
      run: |-
        #./kustomize build . | kubectl apply -f -
        #./kustomize build overlays 
        ./kustomize build overlays | kubectl apply -f -
#         kubectl wait --for=condition=ready pod -l app=mongodb
#         kubectl rollout status deployment mongodb-deployment
#         kubectl get services -o wide
        
